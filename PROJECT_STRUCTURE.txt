MOVA LSP Monorepo - Project Structure
=====================================

mova-lsp-monorepo/
â”œâ”€â”€ .github/
â”‚   â””â”€â”€ workflows/
â”‚       â”œâ”€â”€ ci.yml                    # Build, test, lint on push/PR
â”‚       â””â”€â”€ publish.yml               # npm publish on main merge
â”‚
â”œâ”€â”€ .changeset/
â”‚   â””â”€â”€ config.json                   # Versioning configuration
â”‚
â”œâ”€â”€ packages/
â”‚   â”œâ”€â”€ schemas/                      # @mova/schemas (3.4.1)
â”‚   â”‚   â”œâ”€â”€ src/
â”‚   â”‚   â”‚   â””â”€â”€ index.ts              # Export envelope schema
â”‚   â”‚   â”œâ”€â”€ envelope.3.4.1.schema.json # MOVA schema (JSON Schema 2020-12)
â”‚   â”‚   â”œâ”€â”€ package.json
â”‚   â”‚   â””â”€â”€ tsconfig.json
â”‚   â”‚
â”‚   â”œâ”€â”€ sdk/                          # @mova/sdk (core validator)
â”‚   â”‚   â”œâ”€â”€ src/
â”‚   â”‚   â”‚   â”œâ”€â”€ index.ts              # Main exports
â”‚   â”‚   â”‚   â”œâ”€â”€ types.ts              # Type definitions
â”‚   â”‚   â”‚   â”œâ”€â”€ validator.ts          # AJV initialization & validation
â”‚   â”‚   â”‚   â”œâ”€â”€ document-validator.ts # Text document validation
â”‚   â”‚   â”‚   â”œâ”€â”€ error-mapper.ts       # AJV errors â†’ LSP diagnostics
â”‚   â”‚   â”‚   â”œâ”€â”€ completions.ts        # Completion suggestions
â”‚   â”‚   â”‚   â””â”€â”€ idempotency.ts        # Key generation utilities
â”‚   â”‚   â”œâ”€â”€ package.json
â”‚   â”‚   â”œâ”€â”€ tsconfig.json
â”‚   â”‚   â””â”€â”€ README.md
â”‚   â”‚
â”‚   â”œâ”€â”€ server-lsp/                   # @mova/server-lsp (LSP server)
â”‚   â”‚   â”œâ”€â”€ src/
â”‚   â”‚   â”‚   â””â”€â”€ server.ts             # Full LSP implementation
â”‚   â”‚   â”œâ”€â”€ package.json
â”‚   â”‚   â”œâ”€â”€ tsconfig.json
â”‚   â”‚   â””â”€â”€ README.md
â”‚   â”‚
â”‚   â”œâ”€â”€ client-vscode/                # @mova/client-vscode (VSCode extension)
â”‚   â”‚   â”œâ”€â”€ src/
â”‚   â”‚   â”‚   â””â”€â”€ extension.ts          # Extension entrypoint
â”‚   â”‚   â”œâ”€â”€ package.json
â”‚   â”‚   â”œâ”€â”€ tsconfig.json
â”‚   â”‚   â””â”€â”€ README.md
â”‚   â”‚
â”‚   â”œâ”€â”€ cli/                          # @mova/cli (CLI tools)
â”‚   â”‚   â”œâ”€â”€ src/
â”‚   â”‚   â”‚   â”œâ”€â”€ cli.ts                # CLI entry point (bin)
â”‚   â”‚   â”‚   â””â”€â”€ index.ts              # Programmatic exports
â”‚   â”‚   â”œâ”€â”€ package.json
â”‚   â”‚   â”œâ”€â”€ tsconfig.json
â”‚   â”‚   â””â”€â”€ README.md
â”‚   â”‚
â”‚   â””â”€â”€ cloud/                        # Cloud deployments (optional)
â”‚       â”œâ”€â”€ validate/                 # Cloud Function: validate
â”‚       â””â”€â”€ runner/                   # Cloud Run: dry-run
â”‚
â”œâ”€â”€ examples/
â”‚   â”œâ”€â”€ booking.envelope.json         # Valid sample envelope
â”‚   â””â”€â”€ invalid.envelope.json         # Invalid sample for testing
â”‚
â”œâ”€â”€ .eslintrc.json                    # ESLint configuration
â”œâ”€â”€ .prettierrc.json                  # Prettier configuration
â”œâ”€â”€ .gitignore                        # Git ignores
â”œâ”€â”€ tsconfig.json                     # Root TypeScript config
â”œâ”€â”€ package.json                      # Root monorepo config (npm workspaces)
â”œâ”€â”€ package-lock.json                 # Locked dependencies
â”‚
â”œâ”€â”€ README.md                         # Main documentation
â”œâ”€â”€ tz.md                             # Technical specification (Russian)
â”œâ”€â”€ envelope.3.4.1.schema.json       # Original schema file
â”‚
â””â”€â”€ PROJECT_STRUCTURE.txt             # This file

PACKAGE DEPENDENCIES
====================

@mova/schemas (independent)
    â””â”€â†’ no dependencies (embedded schema)

@mova/sdk
    â”œâ”€â†’ @mova/schemas (for envelope schema)
    â”œâ”€â†’ ajv@8.17.1 (AJV 2020-12 validator)
    â””â”€â†’ jsonc-parser@3.2.1 (position mapping)

@mova/server-lsp
    â”œâ”€â†’ @mova/sdk (validation pipeline)
    â”œâ”€â†’ vscode-languageserver@8.1.0
    â”œâ”€â†’ vscode-languageserver-textdocument@1.3.0
    â””â”€â†’ jsonc-parser@3.2.1 (for error mapping)

@mova/client-vscode
    â”œâ”€â†’ @mova/sdk (optional, for client-side features)
    â”œâ”€â†’ @mova/server-lsp (spawn LSP process)
    â””â”€â†’ vscode-languageclient@9.0.1

@mova/cli
    â”œâ”€â†’ @mova/sdk (for validation, completions, etc.)
    â””â”€â†’ cac@6.7.14 (CLI framework)

KEY FEATURES
============

âœ… Implemented:
  - Validation pipeline (AJV + errorâ†’range mapping)
  - Diagnostics with precise positions (line:character)
  - Completions (14 core verbs + nouns)
  - Hover documentation
  - CLI commands (validate, schema:sync, snippet:generate)
  - LSP server with full diagnostics + completions
  - ESM-only, TypeScript strict mode
  - npm workspaces, each package publishable independently

ðŸš§ Coming Soon:
  - Unit/integration tests
  - Code actions & quick fixes
  - Cloud Functions / Cloud Run deployment
  - Performance profiling
  - Security review

BUILD & PUBLISH
===============

Development:
  npm install              # Install all packages & dev deps
  npm run build            # Build all packages (TypeScript â†’ dist/)
  npm run test             # Run tests for all packages
  npm run lint             # Lint all packages
  npm run format           # Format all packages with Prettier
  npm run dev              # Watch mode for SDK + LSP Server

Publishing:
  npm run changeset        # Create changeset entry
  npm run changeset:status # Check what will be published
  npm run publish:all      # Publish all packages to npm

CI/CD:
  .github/workflows/ci.yml        # Runs on every push/PR
  .github/workflows/publish.yml   # Runs on main branch push

TECHNOLOGY STACK
================

Core:
  - Node.js >=18
  - TypeScript 5.3 (strict mode)
  - ESM (ECMAScript modules only)
  - npm workspaces

Validation:
  - AJV 8.17.1 (JSON Schema 2020-12)
  - jsonc-parser 3.2.1 (JSONC parsing + position mapping)

LSP:
  - vscode-languageserver 8.1.0
  - vscode-languageserver-textdocument 1.3.0
  - vscode-languageclient 9.0.1

CLI:
  - cac 6.7.14 (CLI framework)

DevTools:
  - tsup (bundler)
  - mocha (test runner)
  - eslint (linter)
  - prettier (formatter)
  - changesets (versioning)

STATUS
======

Version: 0.1.0-dev
MVP Status: ðŸŸ¢ MVP Phase
Last Updated: October 2025
License: MIT

For detailed docs, see: README.md
For technical spec (Russian), see: tz.md
